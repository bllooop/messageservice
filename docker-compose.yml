version: '3.8'

services:
  messageservice:
    build: 
      context: .
      dockerfile: Dockerfile  
    ports:
      - 8000:8000
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DB_PASSWORD=54321
      
  db:
    container_name: db
    restart: always
    image: postgres:latest
    volumes: 
      - pgdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=54321
    ports:
      - 5436:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
      
  kafka:
    platform: linux/amd64
    container_name: kafka-go
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "baeldung:1:1"
    networks:
      - kafka-net
      
  zookeeper:
    platform: linux/amd64
    image: wurstmeister/zookeeper:3.4.6
    ports:
      - "2181:2181"
    networks:
      - kafka-net

networks:
  kafka-net:
    driver: bridge

volumes:
  pgdata: