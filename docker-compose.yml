version: '3.8'

services:
  messageservice:
    platform: linux/amd64
    image: bluero/messageservice
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - 8000:8000
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DB_PASSWORD=54321
    networks:
      - app-network
      
  db:
    platform: linux/amd64
    container_name: db
    restart: always
    image: postgres:latest
    volumes: 
      - pgdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=54321
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network
      
  zookeeper:
    platform: linux/amd64
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - app-network

  kafka:
    platform: linux/amd64
    image: 'bitnami/kafka:latest'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    networks:
      - app-network
  
  prometheus:
    platform: linux/amd64
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - messageservice
    networks:
      - app-network

volumes:
  pgdata:

networks:
  app-network:
    driver: bridge